parameter_store:
  plain:
    - name: /example/aws/parameter1
      value: value1
    - name: /example/aws/parameter2
      value: value2
  secure:
    - name: /example/aws/parameter3
      private_key_path: private.pem
      value: orwRg85g5qKkpzX02TNoCq4/22Y08sGy2hpcRfiOThIc16dOQCZem4O+IfyzqBiMfh3UpDSRnY+5uli3y+YrM9PjIokVMNnSOstVlWJjAWrqWYWmaiAbcztarbcD98js7WJCUb6itQmJ9BfhAVC3WjlJvVJ7RJSx1jMZbvnIVt3Q3BKrCBrrKfTsZgp745fxho8FgYigccnyKoXG4NxF+YiQ4I9zqLUwfD5+LCcf49dvBe4H1YHOFk+qiQdaJ9J7oshexET+meNw7pn5KoGplsBOOW7fGTXabyNGmzNxr9QO3TNwh5tDgXC4iGYbDVM6i2I52SphVZ9gQx1WsI1Zmg==

oidc:
  - name: github
    issuer_url: "https://token.actions.githubusercontent.com"

ecr:
  - name: demo
  - name: demo2
    scan_on_push: true
  - name: demo3
    scan_on_push: false
    encryption_configuration:
      encryption_type: KMS
      kms_arn: arn:aws:kms:us-west-2:123456789012:key/12345678-1234-1234-1234-123456789012
    tags:
      Name: demo3
      Environment: dev
  - name: demo4
    scan_on_push: false
    encryption_configuration:
      encryption_type: AES256

eks:
  - name: demo-cluster
    vpc: demo
    version: "1.32"
    alb_security_group_name: alb-sg
    subnet_names: ["demo-private-a", "demo-private-b", "demo-private-c"]
    eks_cluster_role_name: Demo-Cluster-Controller-Role
    eks_fargate_role_name: Demo-Cluster-Fargate-Role
    karpenter_node_role_name: Demo-Cluster-Karpenter-Node-Role
    pod_identity_roles:
      - name: S3-Access-Role
        role_name: S3-Access-Role
        service_account_namespace: default
        service_account_name: demo
      - name: Demo-Cluster-EBS-CSI-Driver-Role
        role_name: Demo-Cluster-EBS-CSI-Driver-Role
        service_account_namespace: kube-system
        service_account_name: ebs-csi-controller-sa
    access_entries:
      - name: Demo-Cluster-Karpenter-Node-Role
        role_name: Demo-Cluster-Karpenter-Node-Role
        type: "EC2_LINUX"
    addons:
      - name: kube-proxy
      - name: vpc-cni
      - name: coredns
        config:
          computeType: Fargate
          replicaCount: 2
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "250m"
              memory: "512Mi"
      - name: aws-ebs-csi-driver
        service_account_role_arn: arn:aws:iam::123456789012:role/EKS-EBS-CSI-Driver-Role
      - name: eks-pod-identity-agent
    tags:
      Name: demo
      Environment: dev
irsa:
  - name: Demo-Cluster-Karpenter-Controller-Role
    eks_name: demo-cluster
    service_account:
      name: karpenter
      namespace: karpenter
    inline_policies:
      - name: karpenter-controller
        policy_file: assets/iam/policy/karpenter-controller.json
    policy_arns:
      - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      - "arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy"
  - name: Demo-Cluster-Alb-Controller-Role
    eks_name: demo-cluster
    service_account:
      name: aws-load-balancer-controller
      namespace: kube-system
    inline_policies:
      - name: alb-controller
        policy_file: assets/iam/policy/alb-controller.json
roles:
  - name: Demo-Cluster-Controller-Role
    assume_role_policy_file: assets/iam/role/assume-eks-controller.json
    policy_arns:
      - "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      - "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
  - name: Demo-Cluster-Karpenter-Node-Role
    assume_role_policy_file: assets/iam/role/assume-eks-node.json
    policy_arns:
      - "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      - "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
  - name: Demo-Cluster-Fargate-Role
    assume_role_policy_file: assets/iam/role/assume-eks-fargate.json
    policy_arns:
      - "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      - "arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy"
  - name: S3-Access-Role
    assume_role_policy_file: assets/iam/role/assume-eks-pod-identity.json
    policy_arns:
      - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
  - name: Demo-Cluster-EBS-CSI-Driver-Role
    assume_role_policy_file: assets/iam/role/assume-eks-pod-identity.json
    policy_arns:
      - "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"

vpc:
  - name: demo
    cidr_block: 10.0.0.0/16
    region: ap-northeast-2
    nat_gateway_info:
      access: public
      az: ["a"]
    subnets:
      - az: a
        access: public
        cidr_block: 10.0.100.0/24
      - az: b
        access: public
        cidr_block: 10.0.101.0/24
      - az: c
        access: public
        cidr_block: 10.0.102.0/24
      - az: a
        access: private
        cidr_block: 10.0.0.0/24
        tags:
          karpenter.sh/discovery: demo-cluster
      - az: b
        access: private
        cidr_block: 10.0.1.0/24
        tags:
          karpenter.sh/discovery: demo-cluster
      - az: c
        access: private
        cidr_block: 10.0.2.0/24
        tags:
          karpenter.sh/discovery: demo-cluster
    route_tables:
      - access: public
        route_table_assocations:
          - subnet_az: a
          - subnet_az: b
          - subnet_az: c
        route_table_routes:
          - destination: 0.0.0.0/0
            target_resource: internet_gateway
      - access: private
        route_table_assocations:
          - subnet_az: a
          - subnet_az: b
          - subnet_az: c
        route_table_routes:
          - destination: 0.0.0.0/0
            target_resource: nat_gateway
            az: a
    security_groups:
      - name: alb-sg
        ingress_rules:
          http:
            ingress_from_port: 80
            ingress_to_port: 80
            ingress_protocol: tcp
            cidr_blocks: ["0.0.0.0/0"]
          https:
            ingress_from_port: 443
            ingress_to_port: 443
            ingress_protocol: tcp
            cidr_blocks: ["0.0.0.0/0"]
          self_custom:
            ingress_from_port: 0
            ingress_to_port: 0
            ingress_protocol: "-1"
            self: true
        egress_rules:
          all:
            egress_from_port: 0
            egress_to_port: 0
            egress_protocol: "-1"
    tags:
      Name: demo
      Environment: dev
